{"ast":null,"code":"const api = 'http://localhost:3001';\nexport const getProducts = async _ref => {\n  let {\n    filterBy,\n    order,\n    porPagina = 10,\n    pagina = 1\n  } = _ref;\n  let response = {};\n  let queryParams = `?porPagina=${porPagina}&pagina=${pagina}`;\n  if (filterBy) queryParams += `&filterBy=${filterBy}`;\n  if (order) queryParams += `&order=${order}`;\n\n  try {\n    response = await fetch(`${api}/items${queryParams}`, {\n      headers: {}\n    });\n  } catch (err) {\n    console.log(err);\n  } finally {\n    return {\n      status: response.status,\n      body: await response.json()\n    };\n  }\n};\nexport const prepareProducts = async () => {\n  let response = {};\n\n  try {\n    response = await fetch(`${api}/items/prepare`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  } finally {\n    return {\n      status: response.status,\n      body: await response.json()\n    };\n  }\n};\nexport const getRoutes = async () => {\n  let response = {};\n\n  try {\n    response = await fetch(`${api}/routes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  } finally {\n    return {\n      status: response.status,\n      body: await response.json()\n    };\n  }\n};\nexport const addProduct = async data => {\n  let response = {};\n\n  try {\n    response = await fetch(`${api}/items`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"identificador\": data.identificador,\n        \"descricao\": data.description,\n        \"empresa\": data.company,\n        \"estado\": data.state,\n        \"dataEntrega\": data.deliverDate\n      })\n    });\n  } catch (err) {\n    console.log(err);\n  } finally {\n    return {\n      status: response.status,\n      body: await response.json()\n    };\n  }\n};","map":{"version":3,"names":["api","getProducts","filterBy","order","porPagina","pagina","response","queryParams","fetch","headers","err","console","log","status","body","json","prepareProducts","method","getRoutes","addProduct","data","JSON","stringify","identificador","description","company","state","deliverDate"],"sources":["/home/gpersijn/Desktop/2022.1/PA/Final_Entregas/frontend/src/api/product.js"],"sourcesContent":["const api = 'http://localhost:3001'\n\nexport const getProducts = async ({ filterBy, order, porPagina = 10, pagina = 1 }) => {\n  let response = {}\n\n  let queryParams = `?porPagina=${porPagina}&pagina=${pagina}`\n  if (filterBy) queryParams += `&filterBy=${filterBy}`\n  if (order) queryParams += `&order=${order}`\n\n  try {\n    response = await fetch(`${api}/items${queryParams}`, {\n      headers: {}\n    })\n  } catch (err) {\n    console.log(err)\n  } finally {\n    return {\n      status: response.status,\n      body: await response.json()\n    }\n  }\n}\n\nexport const prepareProducts = async () => {\n  let response = {}\n\n  try {\n    response = await fetch(`${api}/items/prepare`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n  } catch (err) {\n    console.log(err)\n  } finally {\n    return {\n      status: response.status,\n      body: await response.json()\n    }\n  }\n}\n\nexport const getRoutes = async () => {\n  let response = {}\n\n  try {\n    response = await fetch(`${api}/routes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n  } catch (err) {\n    console.log(err)\n  } finally {\n    return {\n      status: response.status,\n      body: await response.json()\n    }\n  }\n} \n\nexport const addProduct = async (data) => {\n  let response = {}\n\n  try {\n    response = await fetch(`${api}/items`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"identificador\": data.identificador,\n        \"descricao\": data.description,\n        \"empresa\": data.company,\n        \"estado\": data.state,\n        \"dataEntrega\": data.deliverDate,\n      }),\n    })\n  } catch (err) {\n    console.log(err)\n  } finally {\n    return {\n      status: response.status,\n      body: await response.json()\n    }\n  }\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uBAAZ;AAEA,OAAO,MAAMC,WAAW,GAAG,cAA2D;EAAA,IAApD;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,SAAS,GAAG,EAA/B;IAAmCC,MAAM,GAAG;EAA5C,CAAoD;EACpF,IAAIC,QAAQ,GAAG,EAAf;EAEA,IAAIC,WAAW,GAAI,cAAaH,SAAU,WAAUC,MAAO,EAA3D;EACA,IAAIH,QAAJ,EAAcK,WAAW,IAAK,aAAYL,QAAS,EAArC;EACd,IAAIC,KAAJ,EAAWI,WAAW,IAAK,UAASJ,KAAM,EAA/B;;EAEX,IAAI;IACFG,QAAQ,GAAG,MAAME,KAAK,CAAE,GAAER,GAAI,SAAQO,WAAY,EAA5B,EAA+B;MACnDE,OAAO,EAAE;IAD0C,CAA/B,CAAtB;EAGD,CAJD,CAIE,OAAOC,GAAP,EAAY;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD,CAND,SAMU;IACR,OAAO;MACLG,MAAM,EAAEP,QAAQ,CAACO,MADZ;MAELC,IAAI,EAAE,MAAMR,QAAQ,CAACS,IAAT;IAFP,CAAP;EAID;AACF,CAnBM;AAqBP,OAAO,MAAMC,eAAe,GAAG,YAAY;EACzC,IAAIV,QAAQ,GAAG,EAAf;;EAEA,IAAI;IACFA,QAAQ,GAAG,MAAME,KAAK,CAAE,GAAER,GAAI,gBAAR,EAAyB;MAC7CiB,MAAM,EAAE,MADqC;MAE7CR,OAAO,EAAE;QACP,gBAAgB;MADT;IAFoC,CAAzB,CAAtB;EAMD,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD,CATD,SASU;IACR,OAAO;MACLG,MAAM,EAAEP,QAAQ,CAACO,MADZ;MAELC,IAAI,EAAE,MAAMR,QAAQ,CAACS,IAAT;IAFP,CAAP;EAID;AACF,CAlBM;AAoBP,OAAO,MAAMG,SAAS,GAAG,YAAY;EACnC,IAAIZ,QAAQ,GAAG,EAAf;;EAEA,IAAI;IACFA,QAAQ,GAAG,MAAME,KAAK,CAAE,GAAER,GAAI,SAAR,EAAkB;MACtCiB,MAAM,EAAE,MAD8B;MAEtCR,OAAO,EAAE;QACP,gBAAgB;MADT;IAF6B,CAAlB,CAAtB;EAMD,CAPD,CAOE,OAAOC,GAAP,EAAY;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD,CATD,SASU;IACR,OAAO;MACLG,MAAM,EAAEP,QAAQ,CAACO,MADZ;MAELC,IAAI,EAAE,MAAMR,QAAQ,CAACS,IAAT;IAFP,CAAP;EAID;AACF,CAlBM;AAoBP,OAAO,MAAMI,UAAU,GAAG,MAAOC,IAAP,IAAgB;EACxC,IAAId,QAAQ,GAAG,EAAf;;EAEA,IAAI;IACFA,QAAQ,GAAG,MAAME,KAAK,CAAE,GAAER,GAAI,QAAR,EAAiB;MACrCiB,MAAM,EAAE,MAD6B;MAErCR,OAAO,EAAE;QACP,gBAAgB;MADT,CAF4B;MAKrCK,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAe;QACnB,iBAAiBF,IAAI,CAACG,aADH;QAEnB,aAAaH,IAAI,CAACI,WAFC;QAGnB,WAAWJ,IAAI,CAACK,OAHG;QAInB,UAAUL,IAAI,CAACM,KAJI;QAKnB,eAAeN,IAAI,CAACO;MALD,CAAf;IAL+B,CAAjB,CAAtB;EAaD,CAdD,CAcE,OAAOjB,GAAP,EAAY;IACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;EACD,CAhBD,SAgBU;IACR,OAAO;MACLG,MAAM,EAAEP,QAAQ,CAACO,MADZ;MAELC,IAAI,EAAE,MAAMR,QAAQ,CAACS,IAAT;IAFP,CAAP;EAID;AACF,CAzBM"},"metadata":{},"sourceType":"module"}